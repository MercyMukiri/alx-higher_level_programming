The ``1-my_list`` module
============================

Using ``MyList``
---------------------

Importing function from the module:
    >>> MyList = __import__('1-my_list').MyList



Check for module docstring:
         >>> m = __import__("1-my_list").__doc__
         >>> len(m) > 1
         True

Check for class docstring:
         >>> c = __import__("1-my_list").MyList.__doc__
         >>> len(c) > 1
         True

Check for method docstring:
	 >>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
	 >>> len(mod) > 1
	 True

MyList is an instance of the class list
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True


Instance has the correct type
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True


MyList is a subclass of list
    >>> issubclass(MyList, list)
    True


Printing a sorted list (single element)
    >>> my_list = MyList()
    >>> my_list += [18]
    >>> my_list.print_sorted()
    [18]

Printing a sorted list (positive numbers)
    >>> my_list = MyList()
    >>> my_list.append(12)
    >>> my_list.append(23)
    >>> my_list.append(34)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [5, 12, 23, 34]


Printing a sorted list (repeated numbers)
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list += [1]
    >>> my_list.append(2)
    >>> my_list.append(2)
    >>> my_list += [2]
    >>> my_list.print_sorted()
    [1, 1, 2, 2, 2]

Printing a sorted list (positive and negative numbers)
    >>> my_list = MyList()
    >>> my_list.append(-1)
    >>> my_list.append(-9)
    >>> my_list.append(0)
    >>> my_list.append(-4)
    >>> my_list.append(10)
    >>> my_list.print_sorted()
    [-9, -4, -1, 0, 10]


Print_sorted method with 1 passed argument
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2, 3])
    Traceback (most recent call last):
    	      ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given


Print_sorted method with 2 passed arguments
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2], [5, 4])
    Traceback (most recent call last):
    	      ...
    TypeError: print_sorted() takes 1 positional argument but 3 were given


Type of the print_sorted method
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>


Check printable string
    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> print(my_list)
    [5]

Check if print_sorted() returns a new list
    >>> my_list = MyList()
    >>> my_list.append(13)
    >>> my_list.append(-3)
    >>> my_list.append(0)
    >>> my_list.print_sorted()
    [-3, 0, 13]
    >>> my_list
    [13, -3, 0]
